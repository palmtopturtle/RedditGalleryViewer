{"version":3,"sources":["components/SearchForm.js","components/Post.js","components/Gallery.js","components/TagsDisplay.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","_this$props","this","props","searchTextSubreddit","searchTextTag","sortBy","limit","tagsLength","handleTextChange","handleSelectChange","addTag","setSubreddit","warning","subreddit","resetSubreddit","react_default","a","createElement","className","id","type","name","title","onClick","value","onChange","onKeyPress","e","key","preventDefault","disabled","Component","Post","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getPostPreview","noValidPreview","imgs","resolutions","forEach","preview","width","state","postWidth","height","postHeight","setState","url","source","truncateText","text","charLimit","truncated","indexOf","substring","postDivSizes","postDiv","getBoundingClientRect","_this2","author","date","permalink","score","numComments","selfText","localDate","Date","ref","href","target","rel","src","alt","reactHtmlParser","toLocaleDateString","concat","Gallery","posts","map","post","stickied","components_Post","created_utc","images","selftext_html","num_comments","TagsDisplay","tags","deleteTag","tag","BASE_URL","Search","newTag","includes","toConsumableArray","after","reachedEnd","error","fetchPosts","newSubreddit","tagToDelete","filter","isLoading","length","axios","get","outputTags","then","res","newPosts","data","children","catch","_this$setState","defineProperty","_this$setState2","handleError","message","response","status","join","components_SearchForm","components_TagsDisplay","components_Gallery","App","components_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fcfb28a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SearchForm extends Component {\r\n  render() {\r\n    const {\r\n      searchTextSubreddit,\r\n      searchTextTag,\r\n      sortBy,\r\n      limit,\r\n      tagsLength,\r\n      handleTextChange,\r\n      handleSelectChange,\r\n      addTag,\r\n      setSubreddit,\r\n      warning,\r\n      subreddit,\r\n      resetSubreddit\r\n    } = this.props;\r\n    return (\r\n      <form className=\"search-form\">\r\n        <div className=\"input-container\">\r\n          <div className=\"search-box-container\">\r\n          {subreddit ? (\r\n            <button\r\n              className=\"btn\"\r\n              id=\"reset-btn\"\r\n              type=\"button\"\r\n              name=\"reset\"\r\n              title=\"Return to Frontpage\"\r\n              onClick={resetSubreddit}\r\n            >\r\n              <i className=\"material-icons\">home</i>\r\n            </button>\r\n          ) : null}\r\n            <input\r\n              className=\"search-box\"\r\n              type=\"text\"\r\n              name=\"searchTextSubreddit\"\r\n              value={searchTextSubreddit}\r\n              onChange={handleTextChange}\r\n              onKeyPress={e => {\r\n                if (e.key === \"Enter\") {\r\n                  e.preventDefault();\r\n                  setSubreddit();\r\n                }\r\n              }}\r\n            />\r\n            <button\r\n              className=\"search-box-btn\"\r\n              type=\"button\"\r\n              name=\"addSubreddit\"\r\n              onClick={setSubreddit}\r\n            >\r\n              Go To Subreddit\r\n            </button>\r\n          </div>\r\n          <div className=\"search-box-container\">\r\n            <input\r\n              className=\"search-box\"\r\n              type=\"text\"\r\n              name=\"searchTextTag\"\r\n              value={searchTextTag}\r\n              onChange={handleTextChange}\r\n              onKeyPress={e => {\r\n                if (e.key === \"Enter\") {\r\n                  e.preventDefault();\r\n                  addTag();\r\n                }\r\n              }}\r\n            />\r\n            <button\r\n              className=\"search-box-btn\"\r\n              type=\"button\"\r\n              name=\"addTag\"\r\n              onClick={addTag}\r\n            >\r\n              Add Tag\r\n            </button>          \r\n          </div>\r\n        </div>\r\n        {warning ? <div className=\"warning\">{warning}</div> : null}\r\n        <div className=\"select-container\">\r\n          Sort by:\r\n          <select\r\n            className=\"select\"\r\n            id=\"sort-select\"\r\n            name=\"sortBy\"\r\n            value={sortBy}\r\n            onChange={handleSelectChange}\r\n            disabled={tagsLength > 0 ? false : true}\r\n          >\r\n            <option value=\"relevance\">Relevance</option>\r\n            <option value=\"top\">Top</option>\r\n            <option value=\"new\">New</option>\r\n            <option value=\"comments\">Comments</option>\r\n          </select>\r\n          Limit:\r\n          <select\r\n            className=\"select\"\r\n            id=\"limit-select\"\r\n            name=\"limit\"\r\n            value={limit}\r\n            onChange={handleSelectChange}\r\n          >\r\n            <option value={10}>10</option>\r\n            <option value={25}>25</option>\r\n            <option value={50}>50</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\r\nimport reactHtmlParser from \"react-html-parser\";\r\nimport \"../App.css\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      postWidth: 0,\r\n      postHeight: 0,\r\n      preview: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let postDivSizes = this.postDiv.getBoundingClientRect();\r\n    if (this.props.imgs)\r\n      this.setState(\r\n        { postWidth: postDivSizes.width, postHeight: postDivSizes.height },\r\n        this.getPostPreview\r\n      );\r\n  }\r\n\r\n  getPostPreview = () => {\r\n    let noValidPreview = true;\r\n    this.props.imgs.resolutions.forEach(preview => {\r\n      if (\r\n        preview.width >= this.state.postWidth &&\r\n        preview.height >= this.state.postHeight &&\r\n        noValidPreview\r\n      ) {\r\n        this.setState({ preview: preview.url });\r\n        noValidPreview = false;\r\n      }\r\n    });\r\n    if (noValidPreview) this.setState({ preview: this.props.imgs.source.url });\r\n  }\r\n\r\n  truncateText = (text, charLimit) => {\r\n    let truncated = text.indexOf(\" \", charLimit);\r\n    if (truncated === -1) return text;\r\n    return text.substring(0, truncated) + \" ...\";\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      author,\r\n      date,\r\n      url,\r\n      permalink,\r\n      score,\r\n      numComments,\r\n      selfText,\r\n      subreddit\r\n    } = this.props;\r\n\r\n    let localDate = new Date(date * 1000);\r\n\r\n    return (\r\n      <div\r\n        className=\"post\"\r\n        ref={postDiv => {\r\n          this.postDiv = postDiv;\r\n        }}\r\n      >\r\n        {this.state.preview ? (\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={this.state.preview} alt={title} />\r\n          </a>\r\n        ) : (\r\n          <div className=\"selftext-container\">{reactHtmlParser(selfText)}</div>\r\n        )}\r\n        <div className=\"post-text-container\">\r\n          <h3 className=\"post-title\">\r\n            <a\r\n              href={url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              title={title}\r\n            >\r\n              {this.truncateText(title, 100)}\r\n            </a>\r\n          </h3>\r\n          <div className=\"post-info\">\r\n            r/\r\n            {subreddit} | submitted by {author} on{\" \"}\r\n            {localDate.toLocaleDateString()} - {score} points -{\" \"}\r\n            <a\r\n              href={`http://www.reddit.com${permalink}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {numComments} comments\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./Post\";\r\nimport \"../App.css\";\r\n\r\nclass Gallery extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n    return (\r\n      <div className=\"gallery\">\r\n        {posts.map(\r\n          post =>\r\n            !post.stickied ? (\r\n              <Post\r\n                key={posts.indexOf(post)}\r\n                title={post.title}\r\n                author={post.author}\r\n                date={post.created_utc}\r\n                url={post.url}\r\n                permalink={post.permalink}\r\n                imgs={post.preview ? post.preview.images[0] : null}\r\n                selfText={post.selftext_html}\r\n                score={post.score}\r\n                numComments={post.num_comments}\r\n                subreddit={post.subreddit}\r\n              />\r\n            ) : null\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TagsDisplay extends Component {\r\n  render() {\r\n    const { tags, deleteTag } = this.props;\r\n    return (\r\n      <div className=\"tags-container\">\r\n        {tags\r\n          ? tags.map(tag => (\r\n              <div className=\"tag\" key={tag}>\r\n                {tag}{\" \"}\r\n                <i\r\n                  className=\"material-icons remove-btn\"\r\n                  onClick={() => deleteTag(tag)}\r\n                >\r\n                  remove_circle\r\n                </i>\r\n              </div>\r\n            ))\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagsDisplay;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport Gallery from \"./Gallery\";\r\nimport TagsDisplay from \"./TagsDisplay\";\r\nimport \"../App.css\";\r\n\r\nconst BASE_URL = \"https://www.reddit.com/\";\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      subreddit: \"\",\r\n      sortBy: \"relevance\",\r\n      limit: 25,\r\n      after: \"\",\r\n      tags: [],\r\n      searchTextSubreddit: \"\",\r\n      searchTextTag: \"\",\r\n      posts: [],\r\n      reachedEnd: false,\r\n      isLoading: false,\r\n      error: null,\r\n      warning: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchPosts();\r\n  }\r\n\r\n  addTag = () => {\r\n    let newTag = this.state.searchTextTag;\r\n\r\n    if (!newTag) {\r\n      this.setState({ warning: \"Please enter some text first!\" });\r\n    } else if (this.state.tags.includes(newTag)) {\r\n      this.setState({ warning: \"Duplicate tag detected!\" });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          tags: [...this.state.tags, newTag],\r\n          searchTextTag: \"\",\r\n          posts: [],\r\n          after: \"\",\r\n          reachedEnd: false,\r\n          error: null,\r\n          warning: \"\"\r\n        },\r\n        this.fetchPosts\r\n      );\r\n    }\r\n  };\r\n\r\n  setSubreddit = () => {\r\n    let newSubreddit = this.state.searchTextSubreddit;\r\n\r\n    if (!newSubreddit) {\r\n      this.setState({ warning: \"Please enter some text first!\" });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          subreddit: \"r/\" + newSubreddit + \"/\",\r\n          searchTextSubreddit: \"\",\r\n          posts: [],\r\n          after: \"\",\r\n          reachedEnd: false,\r\n          error: null,\r\n          warning: \"\"\r\n        },\r\n        this.fetchPosts\r\n      );\r\n    }\r\n  };\r\n\r\n  resetSubreddit = () => {\r\n    this.setState(\r\n      {\r\n        subreddit: \"\",\r\n        posts: [],\r\n        after: \"\",\r\n        reachedEnd: false,\r\n        error: null,\r\n        warning: \"\"\r\n      },\r\n      this.fetchPosts\r\n    );\r\n  };\r\n\r\n  deleteTag = tagToDelete => {\r\n    this.setState(\r\n      {\r\n        tags: this.state.tags.filter(tag => tag !== tagToDelete),\r\n        posts: [],\r\n        after: \"\",\r\n        reachedEnd: false,\r\n        error: null,\r\n        warning: \"\"\r\n      },\r\n      this.fetchPosts\r\n    );\r\n  };\r\n\r\n  fetchPosts = () => {\r\n    this.setState({ isLoading: true });\r\n    if (this.state.tags.length > 0) {\r\n      axios\r\n        .get(\r\n          `${BASE_URL}${\r\n            this.state.subreddit\r\n          }search.json?q=${this.outputTags()}&limit=${this.state.limit}&sort=${\r\n            this.state.sortBy\r\n          }&restrict_sr=on&raw_json=1&after=${this.state.after}`\r\n        )\r\n        .then(res => {\r\n          let newPosts = res.data.data.children.map(data => data.data);\r\n          let posts = this.state.posts.concat(newPosts);\r\n          let after = res.data.data.after;\r\n          if (newPosts.length < this.state.limit)\r\n            this.setState({ reachedEnd: true });\r\n          this.setState({ posts, after, isLoading: false });\r\n        })\r\n        .catch(error => this.setState({ error, isLoading: false }));\r\n    } else {\r\n      axios\r\n        .get(\r\n          `${BASE_URL}${this.state.subreddit}hot.json?limit=${\r\n            this.state.limit\r\n          }&restrict_sr=on&raw_json=1&after=${this.state.after}`\r\n        )\r\n        .then(res => {\r\n          let newPosts = res.data.data.children.map(data => data.data);\r\n          let posts = this.state.posts.concat(newPosts);\r\n          let after = res.data.data.after;\r\n          if (newPosts.length < this.state.limit)\r\n            this.setState({ reachedEnd: true });\r\n          this.setState({ posts, after, isLoading: false });\r\n        })\r\n        .catch(error => this.setState({ error, isLoading: false }));\r\n    }\r\n  };\r\n\r\n  handleTextChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value, warning: \"\" });\r\n  };\r\n\r\n  handleSelectChange = e => {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n        posts: [],\r\n        after: \"\",\r\n        reachedEnd: false,\r\n        error: null,\r\n        warning: \"\"\r\n      },\r\n      this.fetchPosts\r\n    );\r\n  };\r\n\r\n  handleError = () => {\r\n    if (\r\n      this.state.error.message === \"Network Error\" ||\r\n      this.state.error.response.status === 404\r\n    ) {\r\n      return \"Error: 404 not found! Did you type the subreddit name correctly?\";\r\n    } else {\r\n      return \"An error occured while fetching data! Is reddit.com down?\";\r\n    }\r\n  };\r\n\r\n  outputTags = () => {\r\n    return this.state.tags.join(\"+\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <h1 className=\"header\">\r\n          Reddit Gallery View - {this.state.subreddit ? this.state.subreddit : \"Frontpage\"} \r\n        </h1>\r\n        <SearchForm\r\n          searchTextSubreddit={this.state.searchTextSubreddit}\r\n          searchTextTag={this.state.searchTextTag}\r\n          sortBy={this.state.sortBy}\r\n          limit={this.state.limit}\r\n          tagsLength={this.state.tags.length}\r\n          handleTextChange={this.handleTextChange}\r\n          handleSelectChange={this.handleSelectChange}\r\n          addTag={this.addTag}\r\n          setSubreddit={this.setSubreddit}\r\n          warning={this.state.warning}\r\n          subreddit={this.state.subreddit}\r\n          resetSubreddit={this.resetSubreddit}\r\n        />\r\n        <TagsDisplay tags={this.state.tags} deleteTag={this.deleteTag} />\r\n        <Gallery posts={this.state.posts} />\r\n        <div className=\"footer\">\r\n          {this.state.isLoading ? <h2 className=\"header\">Loading...</h2> : null}\r\n          {this.state.posts.length > 0 && !this.state.reachedEnd ? (\r\n            <button\r\n              id=\"load-btn\"\r\n              className=\"btn\"\r\n              type=\"button\"\r\n              name=\"loadMore\"\r\n              onClick={this.fetchPosts}\r\n            >\r\n              Load More\r\n            </button>\r\n          ) : null}\r\n          {this.state.reachedEnd ? (\r\n            <h2 className=\"header\">Reached end!</h2>\r\n          ) : null}\r\n          {this.state.error ? (\r\n            <h2 className=\"header\">{this.handleError()}</h2>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\nimport Search from './components/Search'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Search />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}